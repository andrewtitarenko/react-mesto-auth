{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseURL,\n      headers\n    } = _ref;\n    this.url = baseURL;\n  }\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  //отображение данных профиля с сервера\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n  editUserInfo(data) {\n    console.log(this._headers);\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  //отображение карточек с сервера\n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n  addNewCard(data) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(cardId, like) {\n    const methodName = like ? \"PUT\" : \"DELETE\";\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: methodName,\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n  editAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: `${avatar}`\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseURL: \"https://mesto.nomoreparties.co/v1/cohort-52\",\n  headers: {\n    authorization: \"0052e1a2-cce0-4efd-a4a0-a96b7082b662\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseURL","headers","url","_checkResponse","response","ok","json","Promise","reject","status","getUserInfo","fetch","method","authorization","localStorage","getItem","then","editUserInfo","data","console","log","_headers","body","JSON","stringify","getCards","addNewCard","deleteCard","cardId","changeLikeCardStatus","like","methodName","editAvatar","avatar","api"],"sources":["/Users/andrewtitarenko/Desktop/12/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseURL, headers }) {\n    this.url = baseURL;\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  //отображение данных профиля с сервера\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  editUserInfo(data) {\n    console.log(this._headers)\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then(this._checkResponse);\n  }\n\n  //отображение карточек с сервера\n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, like) {\n    const methodName = like ? \"PUT\" : \"DELETE\";\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: methodName,\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  editAvatar({ avatar }) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: `${avatar}`,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseURL: \"https://mesto.nomoreparties.co/v1/cohort-52\",\n  headers: {\n    authorization: \"0052e1a2-cce0-4efd-a4a0-a96b7082b662\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}